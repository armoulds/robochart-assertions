/********************************************************************************
 * Copyright (c) 2019 University of York and others
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Alvaro Miyazawa - initial definition
 ********************************************************************************/

module circus.robocalc.robochart.assertions.GenerateAssertions

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."

Workflow {
	bean = org.eclipse.emf.mwe.utils.StandaloneSetup {
		scanClassPath = true
		platformUri = ".."
		
		uriMap = {
			from = "platform:/plugin/circus.robocalc.robochart/model/robochart.genmodel"
			to = "platform:/resource/circus.robocalc.robochart/model/robochart.genmodel"
		}

		uriMap = {
			from = "platform:/plugin/circus.robocalc.robochart/model/robochart.ecore"
			to = "platform:/resource/circus.robocalc.robochart/model/robochart.ecore"
		}
		registerGenModelFile = "platform:/resource/circus.robocalc.robochart/model/robochart.genmodel"
		registerEcoreFile = "platform:/resource/circus.robocalc.robochart/model/robochart.ecore"
	}
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "circus.robocalc.robochart.assertions"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "circus.robocalc.robochart.assertions.Assertions"
			fileExtensions = "assertions"

			serializer = {
				generateStub = false
			}
			parserGenerator = {
				options = {
					/* the probabilistic assertions seem to be ambiguous so I'm enabling backtracking */
					backtrack = true
				}
			}
			validator = {
				composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			junitSupport = {
				junitVersion = "5"
			}
		}
	}
}
